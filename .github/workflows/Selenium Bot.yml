name: Tor Selenium Bot
on:
  workflow_dispatch:
    inputs:
      target_url:
        description: 'URL to visit (optional - will use urls_config.json)'
        required: false
        default: ''
        type: string
  schedule:
    # Run every 5 hours (at 00:00, 05:00, 10:00, 15:00, 20:00 UTC)
    - cron: '0 */5 * * *'

jobs:
  run-bot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tor xvfb wget curl netcat
        
        # Install Firefox using snap (GitHub Actions supports this)
        sudo snap install firefox
        
        # Download and install geckodriver
        GECKODRIVER_VERSION=0.34.0
        wget -q https://github.com/mozilla/geckodriver/releases/download/v${GECKODRIVER_VERSION}/geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz
        tar -xzf geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz
        sudo mv geckodriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/geckodriver
        rm geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz
        
        # Create Firefox symlink for better compatibility
        sudo ln -sf /snap/bin/firefox /usr/local/bin/firefox
        
        # Verify installations
        firefox --version
        geckodriver --version
        tor --version
    
    - name: Configure and start Tor
      run: |
        # Stop any existing tor service
        sudo systemctl stop tor 2>/dev/null || true
        sudo pkill -f tor || true
        sleep 2
        
        # Create a custom torrc file
        sudo mkdir -p /etc/tor
        sudo tee /etc/tor/torrc > /dev/null <<EOF
        SocksPort 9050
        ControlPort 9051
        CookieAuthentication 0
        DataDirectory /tmp/tor_data
        Log notice stdout
        RunAsDaemon 0
        EOF
        
        # Create data directory with proper permissions
        sudo mkdir -p /tmp/tor_data
        sudo chmod 700 /tmp/tor_data
        sudo chown -R debian-tor:debian-tor /tmp/tor_data 2>/dev/null || true
        
        # Start Tor in background
        echo "🌐 Starting Tor..."
        sudo -u debian-tor tor -f /etc/tor/torrc &
        TOR_PID=$!
        echo "TOR_PID=$TOR_PID" >> $GITHUB_ENV
        
        # Wait for Tor to start and test connectivity
        echo "⏳ Waiting for Tor to start (up to 60 seconds)..."
        for i in {1..60}; do
          if nc -z 127.0.0.1 9050; then
            echo "✅ Tor SOCKS proxy is running on port 9050 (attempt $i)"
            break
          fi
          echo "⏳ Attempt $i/60: Tor not ready yet, waiting 1 second..."
          sleep 1
          if [ $i -eq 60 ]; then
            echo "❌ Tor failed to start after 60 seconds"
            exit 1
          fi
        done
        
        # Test Tor connectivity
        if curl --socks5-hostname 127.0.0.1:9050 -s -m 30 "https://check.torproject.org/api/ip" | grep -q "IsTor.*true"; then
            echo "✅ Tor is working correctly!"
        else
            echo "⚠️ Tor connectivity test inconclusive, but port is open"
        fi
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium==4.15.0
    
    - name: Create default config if needed
      run: |
        if [ ! -f urls_config.json ]; then
          cat > urls_config.json << EOF
        {
          "urls": [
            {
              "url": "https://httpbin.org/ip",
              "name": "IP Check Test",
              "enabled": true
            },
            {
              "url": "https://httpbin.org/user-agent", 
              "name": "User Agent Test",
              "enabled": true
            }
          ],
          "settings": {
            "cycles_per_url": 3,
            "min_delay_between_cycles": 2,
            "max_delay_between_cycles": 5,
            "min_reading_time": 1,
            "max_reading_time": 3
          }
        }
        EOF
          echo "📝 Created default URLs configuration"
        fi
    
    - name: Create logs directory
      run: mkdir -p logs
    
    - name: Run bot with virtual display
      run: |
        # Start virtual display for headless browser
        export DISPLAY=:99
        Xvfb :99 -screen 0 1280x720x24 > /dev/null 2>&1 &
        XVFB_PID=$!
        echo "XVFB_PID=$XVFB_PID" >> $GITHUB_ENV
        
        sleep 3
        
        # Set environment variables to indicate Tor is already running
        export TOR_ALREADY_RUNNING=true
        export TOR_SOCKS_PORT=9050
        export TOR_CONTROL_PORT=9051
        
        # Run the bot
        python tor_selenium_bot.py
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bot-logs-${{ github.run_number }}
        path: logs/
        retention-days: 7
    
    - name: Cleanup
      if: always()
      run: |
        # Stop Xvfb if running
        if [ ! -z "$XVFB_PID" ]; then
          kill $XVFB_PID 2>/dev/null || true
        fi
        
        # Stop Tor if running
        if [ ! -z "$TOR_PID" ]; then
          kill $TOR_PID 2>/dev/null || true
        fi
        
        # Additional cleanup
        sudo pkill -f tor || true
        sudo pkill -f Xvfb || true
